name: Java CI with Gradle

on:
  push:
    branches:
      - master
      - dev
      - ci
  pull_request:
    branches:
      - dev
      - master

jobs:
  create_release:
    permissions: write-all
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Set tag var
        id: vars
        run: echo ::set-output name=tag_name::$(echo ${GITHUB_SHA} | cut -c1-7)
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.vars.outputs.tag_name }}
          release_name: Pre-Release ${{ steps.vars.outputs.tag_name }}
          prerelease: true
      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        java: [11]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew runtimeZip
      - name: Upload runtime
        uses: actions/upload-artifact@v1
        with:
          name: uPMT-${{ runner.os }}-runtime
          path: build/uPMT.zip

  assets:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [macOS, Windows, Linux]
    steps:
      - name: Set tag var
        id: vars
        run: echo ::set-output name=tag_name::$(echo ${GITHUB_SHA} | cut -c1-7)
      - name: Load artifact
        uses: actions/download-artifact@v1
        with:
          name: uPMT-${{ matrix.os }}-runtime
      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url
      - name: Get Release Upload URL
        id: get_release_info
        run: |
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value
      - name: Upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: uPMT-${{ matrix.os }}-runtime/uPMT.zip
          asset_name: uPMT-${{ matrix.os }}-${{ steps.vars.outputs.tag_name }}.zip
          asset_content_type: application/zip
